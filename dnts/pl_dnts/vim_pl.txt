____________ perl in vim __________________________________________

	_______:  !!!:
	- see : perlfaq3 , 
	- install (suse.121):  zypper in vim-enhanced 
##________________________________________  ___________________________


#####  ==========  vimrc /vim-configs for perl (in vimrc , and best with if filetype is perl...):

	_______:  installation of vim for pl:
	-!! zypper in vim-enhanced  gimv !! (in suse.12.1)  ##-II- check /etc/alternatives/vim point to vim-enhanced !!
	-!! MUST see +perl in:  vim --version | grep perl

	_______:  nts:
	-!! for auto-completion!!:    set iskeyword+=:
	-!  see Perl_Hacks_Ore_0605.chm : Hack 5. Autocomplete Perl Identifiers in Vim 
	- for tagging see here tags-section !!
	-!! Vim's idea of an "identifier" in a prog-lang is a "keyword" ! (in Vim-speak, a "keyword", see :h keyword)
		VIM doesn't recognize the colon ":" character as a valid part of an identifier, which is annoying if you happen to like multipart class names,
		or qualified package variables. So do:  set iskeyword+=:     ;see  Perl_Hacks_Ore_0605.chm--Hack5

	_______:  vimrc for perl-filetypes:
	set tags+=/up1/varu/varau/prjs/pl1/libs/tags,/up1/varu/varau/prjs/pl1/etc/tags,~/perl5/lib/tags,
	set iskeyword+=:   " see Perl_Hacks_Ore_0605.chm : Hack 5. Autocomplete Perl Identifiers in Vim 
	-- if using perl-support plugin (see its manual+Readme for more settings ... and special suse-cases!):
	let g:Perl_GlobalTemplateFile = '/usr/share/vim/site/perl-support/templates/Templates'   " see perlsupport.txt
	---
	- in perl.std.files, last/first-line:  # vim: ts=4 sts=4 sw=4:
##________________________________________  ___________________________


#####  ==========  tags.files-generating/stags:
	- for tags: generate the tags-files for all libs, and set in vim the "tags" option to the path of your tags-files!
	--- generating tags:
		- ctags -R  <dir>   #/OR:
		- find /usr/lib/perl5/  -type f -print |  xargs gnuctags  -l perl --globals -a   ##--??- needed?:  -iname "*.pm"  /OR  -iregex '.*.pm\|.*.pl'
		- find ~/perl5/lib  -type f -iregex  ".*.pm\|.*.pl" -print|  xargs gnuctags  -l perl --globals -a
		- was?? not worked! ctrl-c:   tags-files:  find /usr/lib/perl5/ -type f -exec gnuctags  -l perl --globals -a {} \;
	--- CP.from.tagsdir.nts:
		-!! set tags="..."  dos NOT work with glob.fileNames, but only with glob.dirNames!   -see :h 'tags'  
			so: set tags+=${prj1TagsDP}/*  does not work! (fileName can not be globed! must be speciefied without regexps!!)
			but ok: tags+=${prj1TagsDP}/**/tags,  : finds all files named tags in all subdirs of ${prj1TagsDP}
			thats why the following dir-tree by generating tags.files:
		- tags generated by:
			cd "$prj1TagsDP"
			ctags -R -f ${prj1TagsDP}/system_perl_5.14.2/tags    /usr/lib/perl5/
			ctags -R -f ${prj1TagsDP}/${prj1ID}/tags             "$prj1libDP/"
			ctags -R -f ${prj1TagsDP}/userhome/tags              "${HOME}/perl5/lib/"
--##################### vimrc.codecs.coll for vim-perls/vim-scripts/..: #############################################

	_______:  open the source code of a system Perl module:
	:e `perldoc -l Module::Name`
	/OR as a function, with hotkey	\pm to open the corresponding source file in a new buffer: 
	nnoremap <Leader>pm :call LoadPerlModule()<CR>
	function! LoadPerlModule()
	  execute 'e `perldoc -l ' . expand("<cWORD>") . '`'
	endfunction

	_______:  perl-funcs-docs in vim, with K hotkey (as for manpages:
	au FileType perl setlocal keywordprg=perldoc\ -T\ -f
	it redirects "K" to use 'perldoc -f' in a Perl file. So K will lookup Perl function names using 'perlfoc -f' for you.

	_______:  perlfaq3  : Tom's vim tips: perldoc-5.14.0/perlfaq3.html#Is-there-a-pretty-printer-(formatter)-for-Perl? 
--###################### prev/olds/from.vims.txt.0806/...: ##################################

	_______:  -- perl-vim-0806.
	- ptags (for tagging, perl-completion, ...), see :h tags-file-format  bzw.  http://www.nicolas.thiery.name/Tags/
	-  more plugin with gui-support...: http://www.vim.org/scripts/script.php?script_id=556   bzw.  http://lug.fh-swf.de/vim/
