
#####  ==========  pydoc-dj for django-api:
    - OL-api-dj:  https://docs.djangoproject.com/en/4.2/py-modindex/

	_______:  short:
	alias pydocdj='python  -c "import django, django.conf, pydoc ; django.conf.settings.configure() ; django.setup() ; pydoc.cli()"'  ; eg: pydocdj django.views
	-/OR (not-worked!? tried on nsv-pc with django-5.0! /:240513  ):
	alias pydocdj='DJANGO_SETTINGS_MODULE=django.conf.global_settings  python  -c "import django, pydoc ; django.setup() ; pydoc.cli()"' ; eg  pydocdj  django.conf

	_______:  pydoc-dj NOT-working without a dj-prj! so:
    - !!  NOT working pydoc django.* as default, because it requires a (dummy-)django-project + django.setup() to be called ... , so:
	some of them (due to their imports in __init__.py) require call of django.setup() and this require s settings.py module, so:
	- must invoke with a dummy-dj-prj-settings (see dj-dnts/-dres for pydoc-dj.py bzw. pydoc-dj.py ) /OR
    -!? if the following ways work for all django classes !?!? try!?

    1-/either:
    go to any django-project-dir containing:  ./manage.py + <prj1>/settings.py ##--here prj1:  my_tennis_club in /up1/mnt/VARUfs/varu/varau/wks/django2/myworld/my_tennis_club/
    export  DJANGO_SETTINGS_MODULE="my_tennis_club.settings"   ##--in: /up1/mnt/VARUfs/varu/varau/wks/django2/myworld/my_tennis_club/my_tennis_club/settings.py
    python  -c "import django, pydoc ; django.setup() ; pydoc.cli()"   django.db.models.Model
    -- bzw. :
	export dummyDjangoPrj_FP=xxxx  PYTHONPATH="${dummyDjangoPrj_FP}:${PYTHONPATH}"  DJANGO_SETTINGS_MODULE="${dummyDjangoPrj_FP}.settings" ;
    python  -c "import django, pydoc ; django.setup() ; pydoc.cli()"  $@ ;
    eg:
    cd <dj-prj1-FP>  ; ##--here: ./my_tennis_club/ prj-DIR containing also my_tennis_club/settings.py : /up1/mnt/VARUfs/varu/varau/wks/django2/myworld/my_tennis_club
    export  DJANGO_SETTINGS_MODULE=my_tennis_club.settings ;  ##-fo setting-file:  /up1/mnt/VARUfs/varu/varau/wks/django2/myworld/my_tennis_club/my_tennis_club/settings.py
    python  -c "import django, pydoc ; django.setup() ; pydoc.    cli()"    django.conf

	1_b /OR : without setting EnvVar! then instead 	calling configure.setup() as:
	python  -c "import django, django.conf, pydoc ; django.conf.settings.configure() ; django.setup() ; pydoc.cli()" django.contrib.admin.ModelAdmin

    2-/OR easier, with the default-dj-settings:
	alias pydocdj='DJANGO_SETTINGS_MODULE=django.conf.global_settings  python  -c "import django, pydoc ; django.setup() ; pydoc.cli()"' ; eg  pydocdj  django.conf
	
    - see also in dj-dnts   pydoc-dj.py bzw. pydoc-dj.sh
    - https://code.djangoproject.com/ticket/31744
##________________________________________  ___________________________



#####  ==========  0more/pydoc_dj.py  __CP_:
#!/usr/bin/env  python

import os
import django
import pydoc

# Prepare Django before executing pydoc command
os.environ['DJANGO_SETTINGS_MODULE'] = 'djp1.settings'
django.setup()

# Now executing pydoc
pydoc.cli()
##________________________________________  ___________________________



#####  ==========  0more\pydoc_dj.sh __CP_:
#!/usr/bin/bash
##--I-problem with pydoc for SOME django-modules, as pydoc  django.db.models, since the __init__ s are executed by imports and so exceptionss....
##--!!-BUT do NOT set these VARs globally, otherwise eg DJANGO_SETTINGS_MODULE specifies the current active module!
#- however django.setup() requires certain (dummy) django-project-tree/-settings and this must be executed before pydoc for django-modules !
#- so here just a dummy django-project-tree for that as djgPrj11_DN :
#
p1=${1:?"USAGE:  ... <python-component-name for pydoc> ; eg:  ... django.db.models ; eg ... django.db.models.fields.DateField"}
#
##--1.-methodOK-OK  with a dummy prj settings.py: ---------------------
## a dummy/empty django-prj-tree incl. its settings.py  is required for setup() in manage.py eg for pydoc django.db.models , ... :
##__  export  djgPrj11_DN=django_p11
##__  export  djgPrj11_DP="${prjEtcDP}/${djgPrj11_DN}"
##__  export  PYTHONPATH="${djgPrj11_DP}:${PYTHONPATH}"
##__  export  DJANGO_SETTINGS_MODULE="${djgPrj11_DN}.settings"
##----------------- 1END dummy-prj
#
##--2.method: with django dafult settings.py : -----------------------
export  DJANGO_SETTINGS_MODULE=django.conf.global_settings
python  -c "import django, pydoc ; django.setup() ; pydoc.cli()"  $@

##________________________________________  ___________________________

