object                    ::  <class 'object'>  --module:  builtins  --bases:  ()  --mro:  (<class 'object'>,)
------|ABC                    ::  <class 'abc.ABC'>  --module:  abc  --bases:  (<class 'object'>,)  --mro:  (<class 'abc.ABC'>, <class 'object'>)
------|------|AbstractAsyncContextManager                    ::  <class 'contextlib.AbstractAsyncContextManager'>  --module:  contextlib  --bases:  (<class 'abc.ABC'>,)  --mro:  (<class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|AsyncExitStack                    ::  <class 'contextlib.AsyncExitStack'>  --module:  contextlib  --bases:  (<class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractAsyncContextManager'>)  --mro:  (<class 'contextlib.AsyncExitStack'>, <class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|_AsyncGeneratorContextManager                    ::  <class 'contextlib._AsyncGeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'contextlib.AsyncContextDecorator'>)  --mro:  (<class 'contextlib._AsyncGeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'contextlib.AsyncContextDecorator'>, <class 'object'>)
------|------|------|aclosing                    ::  <class 'contextlib.aclosing'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractAsyncContextManager'>,)  --mro:  (<class 'contextlib.aclosing'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|nullcontext                    ::  <class 'contextlib.nullcontext'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractContextManager'>, <class 'contextlib.AbstractAsyncContextManager'>)  --mro:  (<class 'contextlib.nullcontext'>, <class 'contextlib.AbstractContextManager'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|AbstractContextManager                    ::  <class 'contextlib.AbstractContextManager'>  --module:  contextlib  --bases:  (<class 'abc.ABC'>,)  --mro:  (<class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|ExitStack                    ::  <class 'contextlib.ExitStack'>  --module:  contextlib  --bases:  (<class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractContextManager'>)  --mro:  (<class 'contextlib.ExitStack'>, <class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|_GeneratorContextManager                    ::  <class 'contextlib._GeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'contextlib.ContextDecorator'>)  --mro:  (<class 'contextlib._GeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'contextlib.ContextDecorator'>, <class 'object'>)
------|------|------|_RedirectStream                    ::  <class 'contextlib._RedirectStream'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractContextManager'>,)  --mro:  (<class 'contextlib._RedirectStream'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|------|redirect_stderr                    ::  <class 'contextlib.redirect_stderr'>  --module:  contextlib  --bases:  (<class 'contextlib._RedirectStream'>,)  --mro:  (<class 'contextlib.redirect_stderr'>, <class 'contextlib._RedirectStream'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|------|redirect_stdout                    ::  <class 'contextlib.redirect_stdout'>  --module:  contextlib  --bases:  (<class 'contextlib._RedirectStream'>,)  --mro:  (<class 'contextlib.redirect_stdout'>, <class 'contextlib._RedirectStream'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|closing                    ::  <class 'contextlib.closing'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractContextManager'>,)  --mro:  (<class 'contextlib.closing'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|nullcontext                    ::  <class 'contextlib.nullcontext'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractContextManager'>, <class 'contextlib.AbstractAsyncContextManager'>)  --mro:  (<class 'contextlib.nullcontext'>, <class 'contextlib.AbstractContextManager'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|------|suppress                    ::  <class 'contextlib.suppress'>  --module:  contextlib  --bases:  (<class 'contextlib.AbstractContextManager'>,)  --mro:  (<class 'contextlib.suppress'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|PathLike                    ::  <class 'os.PathLike'>  --module:  os  --bases:  (<class 'abc.ABC'>,)  --mro:  (<class 'os.PathLike'>, <class 'abc.ABC'>, <class 'object'>)
------|AsyncContextDecorator                    ::  <class 'contextlib.AsyncContextDecorator'>  --module:  contextlib  --bases:  (<class 'object'>,)  --mro:  (<class 'contextlib.AsyncContextDecorator'>, <class 'object'>)
------|------|_AsyncGeneratorContextManager                    ::  <class 'contextlib._AsyncGeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'contextlib.AsyncContextDecorator'>)  --mro:  (<class 'contextlib._AsyncGeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'contextlib.AsyncContextDecorator'>, <class 'object'>)
------|AsyncIterable                    ::  <class 'collections.abc.AsyncIterable'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.AsyncIterable'>, <class 'object'>)
------|------|AsyncIterator                    ::  <class 'collections.abc.AsyncIterator'>  --module:  collections.abc  --bases:  (<class 'collections.abc.AsyncIterable'>,)  --mro:  (<class 'collections.abc.AsyncIterator'>, <class 'collections.abc.AsyncIterable'>, <class 'object'>)
------|------|------|AsyncGenerator                    ::  <class 'collections.abc.AsyncGenerator'>  --module:  collections.abc  --bases:  (<class 'collections.abc.AsyncIterator'>,)  --mro:  (<class 'collections.abc.AsyncGenerator'>, <class 'collections.abc.AsyncIterator'>, <class 'collections.abc.AsyncIterable'>, <class 'object'>)
------|Awaitable                    ::  <class 'collections.abc.Awaitable'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Awaitable'>, <class 'object'>)
------|------|Coroutine                    ::  <class 'collections.abc.Coroutine'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Awaitable'>,)  --mro:  (<class 'collections.abc.Coroutine'>, <class 'collections.abc.Awaitable'>, <class 'object'>)
------|BaseException                    ::  <class 'BaseException'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'BaseException'>, <class 'object'>)
------|------|Exception                    ::  <class 'Exception'>  --module:  builtins  --bases:  (<class 'BaseException'>,)  --mro:  (<class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|ArithmeticError                    ::  <class 'ArithmeticError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'ArithmeticError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|FloatingPointError                    ::  <class 'FloatingPointError'>  --module:  builtins  --bases:  (<class 'ArithmeticError'>,)  --mro:  (<class 'FloatingPointError'>, <class 'ArithmeticError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|OverflowError                    ::  <class 'OverflowError'>  --module:  builtins  --bases:  (<class 'ArithmeticError'>,)  --mro:  (<class 'OverflowError'>, <class 'ArithmeticError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ZeroDivisionError                    ::  <class 'ZeroDivisionError'>  --module:  builtins  --bases:  (<class 'ArithmeticError'>,)  --mro:  (<class 'ZeroDivisionError'>, <class 'ArithmeticError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|AssertionError                    ::  <class 'AssertionError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'AssertionError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|AttributeError                    ::  <class 'AttributeError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'AttributeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|BufferError                    ::  <class 'BufferError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'BufferError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|EOFError                    ::  <class 'EOFError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'EOFError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|ImportError                    ::  <class 'ImportError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'ImportError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ModuleNotFoundError                    ::  <class 'ModuleNotFoundError'>  --module:  builtins  --bases:  (<class 'ImportError'>,)  --mro:  (<class 'ModuleNotFoundError'>, <class 'ImportError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ZipImportError                    ::  <class 'zipimport.ZipImportError'>  --module:  zipimport  --bases:  (<class 'ImportError'>,)  --mro:  (<class 'zipimport.ZipImportError'>, <class 'ImportError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|LookupError                    ::  <class 'LookupError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'LookupError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|CodecRegistryError                    ::  <class 'encodings.CodecRegistryError'>  --module:  encodings  --bases:  (<class 'LookupError'>, <class 'SystemError'>)  --mro:  (<class 'encodings.CodecRegistryError'>, <class 'LookupError'>, <class 'SystemError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|IndexError                    ::  <class 'IndexError'>  --module:  builtins  --bases:  (<class 'LookupError'>,)  --mro:  (<class 'IndexError'>, <class 'LookupError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|KeyError                    ::  <class 'KeyError'>  --module:  builtins  --bases:  (<class 'LookupError'>,)  --mro:  (<class 'KeyError'>, <class 'LookupError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|MemoryError                    ::  <class 'MemoryError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'MemoryError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|NameError                    ::  <class 'NameError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'NameError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UnboundLocalError                    ::  <class 'UnboundLocalError'>  --module:  builtins  --bases:  (<class 'NameError'>,)  --mro:  (<class 'UnboundLocalError'>, <class 'NameError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|OSError                    ::  <class 'OSError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|BlockingIOError                    ::  <class 'BlockingIOError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'BlockingIOError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ChildProcessError                    ::  <class 'ChildProcessError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'ChildProcessError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ConnectionError                    ::  <class 'ConnectionError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'ConnectionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|BrokenPipeError                    ::  <class 'BrokenPipeError'>  --module:  builtins  --bases:  (<class 'ConnectionError'>,)  --mro:  (<class 'BrokenPipeError'>, <class 'ConnectionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|ConnectionAbortedError                    ::  <class 'ConnectionAbortedError'>  --module:  builtins  --bases:  (<class 'ConnectionError'>,)  --mro:  (<class 'ConnectionAbortedError'>, <class 'ConnectionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|ConnectionRefusedError                    ::  <class 'ConnectionRefusedError'>  --module:  builtins  --bases:  (<class 'ConnectionError'>,)  --mro:  (<class 'ConnectionRefusedError'>, <class 'ConnectionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|ConnectionResetError                    ::  <class 'ConnectionResetError'>  --module:  builtins  --bases:  (<class 'ConnectionError'>,)  --mro:  (<class 'ConnectionResetError'>, <class 'ConnectionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|FileExistsError                    ::  <class 'FileExistsError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'FileExistsError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|FileNotFoundError                    ::  <class 'FileNotFoundError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'FileNotFoundError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|InterruptedError                    ::  <class 'InterruptedError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'InterruptedError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|IsADirectoryError                    ::  <class 'IsADirectoryError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'IsADirectoryError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|NotADirectoryError                    ::  <class 'NotADirectoryError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'NotADirectoryError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|PermissionError                    ::  <class 'PermissionError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'PermissionError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ProcessLookupError                    ::  <class 'ProcessLookupError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'ProcessLookupError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|TimeoutError                    ::  <class 'TimeoutError'>  --module:  builtins  --bases:  (<class 'OSError'>,)  --mro:  (<class 'TimeoutError'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UnsupportedOperation                    ::  <class 'io.UnsupportedOperation'>  --module:  io  --bases:  (<class 'OSError'>, <class 'ValueError'>)  --mro:  (<class 'io.UnsupportedOperation'>, <class 'OSError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|itimer_error                    ::  <class 'signal.itimer_error'>  --module:  signal  --bases:  (<class 'OSError'>,)  --mro:  (<class 'signal.itimer_error'>, <class 'OSError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|ReferenceError                    ::  <class 'ReferenceError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'ReferenceError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|RuntimeError                    ::  <class 'RuntimeError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'RuntimeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|NotImplementedError                    ::  <class 'NotImplementedError'>  --module:  builtins  --bases:  (<class 'RuntimeError'>,)  --mro:  (<class 'NotImplementedError'>, <class 'RuntimeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|RecursionError                    ::  <class 'RecursionError'>  --module:  builtins  --bases:  (<class 'RuntimeError'>,)  --mro:  (<class 'RecursionError'>, <class 'RuntimeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|_DeadlockError                    ::  <class '_frozen_importlib._DeadlockError'>  --module:  _frozen_importlib  --bases:  (<class 'RuntimeError'>,)  --mro:  (<class '_frozen_importlib._DeadlockError'>, <class 'RuntimeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|StopAsyncIteration                    ::  <class 'StopAsyncIteration'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'StopAsyncIteration'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|StopIteration                    ::  <class 'StopIteration'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'StopIteration'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|SyntaxError                    ::  <class 'SyntaxError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'SyntaxError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|IndentationError                    ::  <class 'IndentationError'>  --module:  builtins  --bases:  (<class 'SyntaxError'>,)  --mro:  (<class 'IndentationError'>, <class 'SyntaxError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|TabError                    ::  <class 'TabError'>  --module:  builtins  --bases:  (<class 'IndentationError'>,)  --mro:  (<class 'TabError'>, <class 'IndentationError'>, <class 'SyntaxError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|SystemError                    ::  <class 'SystemError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'SystemError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|CodecRegistryError                    ::  <class 'encodings.CodecRegistryError'>  --module:  encodings  --bases:  (<class 'LookupError'>, <class 'SystemError'>)  --mro:  (<class 'encodings.CodecRegistryError'>, <class 'LookupError'>, <class 'SystemError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|TypeError                    ::  <class 'TypeError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'TypeError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|ValueError                    ::  <class 'ValueError'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UnicodeError                    ::  <class 'UnicodeError'>  --module:  builtins  --bases:  (<class 'ValueError'>,)  --mro:  (<class 'UnicodeError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|UnicodeDecodeError                    ::  <class 'UnicodeDecodeError'>  --module:  builtins  --bases:  (<class 'UnicodeError'>,)  --mro:  (<class 'UnicodeDecodeError'>, <class 'UnicodeError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|UnicodeEncodeError                    ::  <class 'UnicodeEncodeError'>  --module:  builtins  --bases:  (<class 'UnicodeError'>,)  --mro:  (<class 'UnicodeEncodeError'>, <class 'UnicodeError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|------|UnicodeTranslateError                    ::  <class 'UnicodeTranslateError'>  --module:  builtins  --bases:  (<class 'UnicodeError'>,)  --mro:  (<class 'UnicodeTranslateError'>, <class 'UnicodeError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UnsupportedOperation                    ::  <class 'io.UnsupportedOperation'>  --module:  io  --bases:  (<class 'OSError'>, <class 'ValueError'>)  --mro:  (<class 'io.UnsupportedOperation'>, <class 'OSError'>, <class 'ValueError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|Warning                    ::  <class 'Warning'>  --module:  builtins  --bases:  (<class 'Exception'>,)  --mro:  (<class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|BytesWarning                    ::  <class 'BytesWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'BytesWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|DeprecationWarning                    ::  <class 'DeprecationWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'DeprecationWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|EncodingWarning                    ::  <class 'EncodingWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'EncodingWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|FutureWarning                    ::  <class 'FutureWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'FutureWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ImportWarning                    ::  <class 'ImportWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'ImportWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|PendingDeprecationWarning                    ::  <class 'PendingDeprecationWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'PendingDeprecationWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|ResourceWarning                    ::  <class 'ResourceWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'ResourceWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|RuntimeWarning                    ::  <class 'RuntimeWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'RuntimeWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|SyntaxWarning                    ::  <class 'SyntaxWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'SyntaxWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UnicodeWarning                    ::  <class 'UnicodeWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'UnicodeWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|------|UserWarning                    ::  <class 'UserWarning'>  --module:  builtins  --bases:  (<class 'Warning'>,)  --mro:  (<class 'UserWarning'>, <class 'Warning'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|------|_OptionError                    ::  <class 'warnings._OptionError'>  --module:  warnings  --bases:  (<class 'Exception'>,)  --mro:  (<class 'warnings._OptionError'>, <class 'Exception'>, <class 'BaseException'>, <class 'object'>)
------|------|GeneratorExit                    ::  <class 'GeneratorExit'>  --module:  builtins  --bases:  (<class 'BaseException'>,)  --mro:  (<class 'GeneratorExit'>, <class 'BaseException'>, <class 'object'>)
------|------|KeyboardInterrupt                    ::  <class 'KeyboardInterrupt'>  --module:  builtins  --bases:  (<class 'BaseException'>,)  --mro:  (<class 'KeyboardInterrupt'>, <class 'BaseException'>, <class 'object'>)
------|------|SystemExit                    ::  <class 'SystemExit'>  --module:  builtins  --bases:  (<class 'BaseException'>,)  --mro:  (<class 'SystemExit'>, <class 'BaseException'>, <class 'object'>)
------|BuiltinImporter                    ::  <class '_frozen_importlib.BuiltinImporter'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib.BuiltinImporter'>, <class 'object'>)
------|Callable                    ::  <class 'collections.abc.Callable'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Callable'>, <class 'object'>)
------|CallableProxyType                    ::  <class 'weakref.CallableProxyType'>  --module:  weakref  --bases:  (<class 'object'>,)  --mro:  (<class 'weakref.CallableProxyType'>, <class 'object'>)
------|Codec                    ::  <class 'codecs.Codec'>  --module:  codecs  --bases:  (<class 'object'>,)  --mro:  (<class 'codecs.Codec'>, <class 'object'>)
------|------|StreamReader                    ::  <class 'codecs.StreamReader'>  --module:  codecs  --bases:  (<class 'codecs.Codec'>,)  --mro:  (<class 'codecs.StreamReader'>, <class 'codecs.Codec'>, <class 'object'>)
------|------|------|StreamReader                    ::  <class 'encodings.utf_8.StreamReader'>  --module:  encodings.utf_8  --bases:  (<class 'codecs.StreamReader'>,)  --mro:  (<class 'encodings.utf_8.StreamReader'>, <class 'codecs.StreamReader'>, <class 'codecs.Codec'>, <class 'object'>)
------|------|StreamWriter                    ::  <class 'codecs.StreamWriter'>  --module:  codecs  --bases:  (<class 'codecs.Codec'>,)  --mro:  (<class 'codecs.StreamWriter'>, <class 'codecs.Codec'>, <class 'object'>)
------|------|------|StreamWriter                    ::  <class 'encodings.utf_8.StreamWriter'>  --module:  encodings.utf_8  --bases:  (<class 'codecs.StreamWriter'>,)  --mro:  (<class 'encodings.utf_8.StreamWriter'>, <class 'codecs.StreamWriter'>, <class 'codecs.Codec'>, <class 'object'>)
------|Container                    ::  <class 'collections.abc.Container'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Container'>, <class 'object'>)
------|------|Collection                    ::  <class 'collections.abc.Collection'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>)  --mro:  (<class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Mapping                    ::  <class 'collections.abc.Mapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableMapping                    ::  <class 'collections.abc.MutableMapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Mapping'>,)  --mro:  (<class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|ChainMap                    ::  <class 'collections.ChainMap'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.ChainMap'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserDict                    ::  <class 'collections.UserDict'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.UserDict'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_Environ                    ::  <class 'os._Environ'>  --module:  os  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'os._Environ'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Sequence                    ::  <class 'collections.abc.Sequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ByteString                    ::  <class 'collections.abc.ByteString'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.ByteString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSequence                    ::  <class 'collections.abc.MutableSequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserList                    ::  <class 'collections.UserList'>  --module:  collections  --bases:  (<class 'collections.abc.MutableSequence'>,)  --mro:  (<class 'collections.UserList'>, <class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|UserString                    ::  <class 'collections.UserString'>  --module:  collections  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.UserString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Set                    ::  <class 'collections.abc.Set'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ItemsView                    ::  <class 'collections.abc.ItemsView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictItemsView                    ::  <class 'collections._OrderedDictItemsView'>  --module:  collections  --bases:  (<class 'collections.abc.ItemsView'>,)  --mro:  (<class 'collections._OrderedDictItemsView'>, <class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|KeysView                    ::  <class 'collections.abc.KeysView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictKeysView                    ::  <class 'collections._OrderedDictKeysView'>  --module:  collections  --bases:  (<class 'collections.abc.KeysView'>,)  --mro:  (<class 'collections._OrderedDictKeysView'>, <class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSet                    ::  <class 'collections.abc.MutableSet'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Set'>,)  --mro:  (<class 'collections.abc.MutableSet'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|ValuesView                    ::  <class 'collections.abc.ValuesView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictValuesView                    ::  <class 'collections._OrderedDictValuesView'>  --module:  collections  --bases:  (<class 'collections.abc.ValuesView'>,)  --mro:  (<class 'collections._OrderedDictValuesView'>, <class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|Context                    ::  <class '_contextvars.Context'>  --module:  _contextvars  --bases:  (<class 'object'>,)  --mro:  (<class '_contextvars.Context'>, <class 'object'>)
------|ContextDecorator                    ::  <class 'contextlib.ContextDecorator'>  --module:  contextlib  --bases:  (<class 'object'>,)  --mro:  (<class 'contextlib.ContextDecorator'>, <class 'object'>)
------|------|_GeneratorContextManager                    ::  <class 'contextlib._GeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'contextlib.ContextDecorator'>)  --mro:  (<class 'contextlib._GeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'contextlib.ContextDecorator'>, <class 'object'>)
------|ContextVar                    ::  <class '_contextvars.ContextVar'>  --module:  _contextvars  --bases:  (<class 'object'>,)  --mro:  (<class '_contextvars.ContextVar'>, <class 'object'>)
------|DirEntry                    ::  <class 'posix.DirEntry'>  --module:  posix  --bases:  (<class 'object'>,)  --mro:  (<class 'posix.DirEntry'>, <class 'object'>)
------|DistutilsMetaFinder                    ::  <class '_distutils_hack.DistutilsMetaFinder'>  --module:  _distutils_hack  --bases:  (<class 'object'>,)  --mro:  (<class '_distutils_hack.DistutilsMetaFinder'>, <class 'object'>)
------|DynamicClassAttribute                    ::  <class 'types.DynamicClassAttribute'>  --module:  types  --bases:  (<class 'object'>,)  --mro:  (<class 'types.DynamicClassAttribute'>, <class 'object'>)
------|EncodingMap                    ::  <class 'EncodingMap'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'EncodingMap'>, <class 'object'>)
------|FileFinder                    ::  <class '_frozen_importlib_external.FileFinder'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external.FileFinder'>, <class 'object'>)
------|FileLoader                    ::  <class '_frozen_importlib_external.FileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external.FileLoader'>, <class 'object'>)
------|------|ExtensionFileLoader                    ::  <class '_frozen_importlib_external.ExtensionFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>)  --mro:  (<class '_frozen_importlib_external.ExtensionFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|SourceFileLoader                    ::  <class '_frozen_importlib_external.SourceFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external.SourceLoader'>)  --mro:  (<class '_frozen_importlib_external.SourceFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external.SourceLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|SourcelessFileLoader                    ::  <class '_frozen_importlib_external.SourcelessFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>)  --mro:  (<class '_frozen_importlib_external.SourcelessFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|FrozenImporter                    ::  <class '_frozen_importlib.FrozenImporter'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib.FrozenImporter'>, <class 'object'>)
------|GenericAlias                    ::  <class 'types.GenericAlias'>  --module:  types  --bases:  (<class 'object'>,)  --mro:  (<class 'types.GenericAlias'>, <class 'object'>)
------|------|_CallableGenericAlias                    ::  <class 'collections.abc._CallableGenericAlias'>  --module:  collections.abc  --bases:  (<class 'types.GenericAlias'>,)  --mro:  (<class 'collections.abc._CallableGenericAlias'>, <class 'types.GenericAlias'>, <class 'object'>)
------|Hashable                    ::  <class 'collections.abc.Hashable'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Hashable'>, <class 'object'>)
------|IncrementalDecoder                    ::  <class 'codecs.IncrementalDecoder'>  --module:  codecs  --bases:  (<class 'object'>,)  --mro:  (<class 'codecs.IncrementalDecoder'>, <class 'object'>)
------|------|BufferedIncrementalDecoder                    ::  <class 'codecs.BufferedIncrementalDecoder'>  --module:  codecs  --bases:  (<class 'codecs.IncrementalDecoder'>,)  --mro:  (<class 'codecs.BufferedIncrementalDecoder'>, <class 'codecs.IncrementalDecoder'>, <class 'object'>)
------|------|------|IncrementalDecoder                    ::  <class 'encodings.utf_8.IncrementalDecoder'>  --module:  encodings.utf_8  --bases:  (<class 'codecs.BufferedIncrementalDecoder'>,)  --mro:  (<class 'encodings.utf_8.IncrementalDecoder'>, <class 'codecs.BufferedIncrementalDecoder'>, <class 'codecs.IncrementalDecoder'>, <class 'object'>)
------|IncrementalEncoder                    ::  <class 'codecs.IncrementalEncoder'>  --module:  codecs  --bases:  (<class 'object'>,)  --mro:  (<class 'codecs.IncrementalEncoder'>, <class 'object'>)
------|------|BufferedIncrementalEncoder                    ::  <class 'codecs.BufferedIncrementalEncoder'>  --module:  codecs  --bases:  (<class 'codecs.IncrementalEncoder'>,)  --mro:  (<class 'codecs.BufferedIncrementalEncoder'>, <class 'codecs.IncrementalEncoder'>, <class 'object'>)
------|------|IncrementalEncoder                    ::  <class 'encodings.utf_8.IncrementalEncoder'>  --module:  encodings.utf_8  --bases:  (<class 'codecs.IncrementalEncoder'>,)  --mro:  (<class 'encodings.utf_8.IncrementalEncoder'>, <class 'codecs.IncrementalEncoder'>, <class 'object'>)
------|IncrementalNewlineDecoder                    ::  <class '_io.IncrementalNewlineDecoder'>  --module:  _io  --bases:  (<class 'object'>,)  --mro:  (<class '_io.IncrementalNewlineDecoder'>, <class 'object'>)
------|InterpreterID                    ::  <class 'InterpreterID'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'InterpreterID'>, <class 'object'>)
------|Iterable                    ::  <class 'collections.abc.Iterable'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Iterable'>, <class 'object'>)
------|------|Collection                    ::  <class 'collections.abc.Collection'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>)  --mro:  (<class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Mapping                    ::  <class 'collections.abc.Mapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableMapping                    ::  <class 'collections.abc.MutableMapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Mapping'>,)  --mro:  (<class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|ChainMap                    ::  <class 'collections.ChainMap'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.ChainMap'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserDict                    ::  <class 'collections.UserDict'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.UserDict'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_Environ                    ::  <class 'os._Environ'>  --module:  os  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'os._Environ'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Sequence                    ::  <class 'collections.abc.Sequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ByteString                    ::  <class 'collections.abc.ByteString'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.ByteString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSequence                    ::  <class 'collections.abc.MutableSequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserList                    ::  <class 'collections.UserList'>  --module:  collections  --bases:  (<class 'collections.abc.MutableSequence'>,)  --mro:  (<class 'collections.UserList'>, <class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|UserString                    ::  <class 'collections.UserString'>  --module:  collections  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.UserString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Set                    ::  <class 'collections.abc.Set'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ItemsView                    ::  <class 'collections.abc.ItemsView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictItemsView                    ::  <class 'collections._OrderedDictItemsView'>  --module:  collections  --bases:  (<class 'collections.abc.ItemsView'>,)  --mro:  (<class 'collections._OrderedDictItemsView'>, <class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|KeysView                    ::  <class 'collections.abc.KeysView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictKeysView                    ::  <class 'collections._OrderedDictKeysView'>  --module:  collections  --bases:  (<class 'collections.abc.KeysView'>,)  --mro:  (<class 'collections._OrderedDictKeysView'>, <class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSet                    ::  <class 'collections.abc.MutableSet'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Set'>,)  --mro:  (<class 'collections.abc.MutableSet'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|ValuesView                    ::  <class 'collections.abc.ValuesView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictValuesView                    ::  <class 'collections._OrderedDictValuesView'>  --module:  collections  --bases:  (<class 'collections.abc.ValuesView'>,)  --mro:  (<class 'collections._OrderedDictValuesView'>, <class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|Iterator                    ::  <class 'collections.abc.Iterator'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Iterable'>,)  --mro:  (<class 'collections.abc.Iterator'>, <class 'collections.abc.Iterable'>, <class 'object'>)
------|------|------|Generator                    ::  <class 'collections.abc.Generator'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Iterator'>,)  --mro:  (<class 'collections.abc.Generator'>, <class 'collections.abc.Iterator'>, <class 'collections.abc.Iterable'>, <class 'object'>)
------|------|Reversible                    ::  <class 'collections.abc.Reversible'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Iterable'>,)  --mro:  (<class 'collections.abc.Reversible'>, <class 'collections.abc.Iterable'>, <class 'object'>)
------|------|------|Sequence                    ::  <class 'collections.abc.Sequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ByteString                    ::  <class 'collections.abc.ByteString'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.ByteString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSequence                    ::  <class 'collections.abc.MutableSequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserList                    ::  <class 'collections.UserList'>  --module:  collections  --bases:  (<class 'collections.abc.MutableSequence'>,)  --mro:  (<class 'collections.UserList'>, <class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|UserString                    ::  <class 'collections.UserString'>  --module:  collections  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.UserString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|KeyWrapper                    ::  <class 'functools.KeyWrapper'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.KeyWrapper'>, <class 'object'>)
------|Loader                    ::  <class 'importlib._abc.Loader'>  --module:  importlib._abc  --bases:  (<class 'object'>,)  --mro:  (<class 'importlib._abc.Loader'>, <class 'object'>)
------|------|LazyLoader                    ::  <class 'importlib.util.LazyLoader'>  --module:  importlib.util  --bases:  (<class 'importlib._abc.Loader'>,)  --mro:  (<class 'importlib.util.LazyLoader'>, <class 'importlib._abc.Loader'>, <class 'object'>)
------|MISSING                    ::  <class 'Token.MISSING'>  --module:  Token  --bases:  (<class 'object'>,)  --mro:  (<class 'Token.MISSING'>, <class 'object'>)
------|ModuleSpec                    ::  <class '_frozen_importlib.ModuleSpec'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib.ModuleSpec'>, <class 'object'>)
------|NoneType                    ::  <class 'NoneType'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'NoneType'>, <class 'object'>)
------|NotImplementedType                    ::  <class 'NotImplementedType'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'NotImplementedType'>, <class 'object'>)
------|PathFinder                    ::  <class '_frozen_importlib_external.PathFinder'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external.PathFinder'>, <class 'object'>)
------|PickleBuffer                    ::  <class 'pickle.PickleBuffer'>  --module:  pickle  --bases:  (<class 'object'>,)  --mro:  (<class 'pickle.PickleBuffer'>, <class 'object'>)
------|ProxyType                    ::  <class 'weakref.ProxyType'>  --module:  weakref  --bases:  (<class 'object'>,)  --mro:  (<class 'weakref.ProxyType'>, <class 'object'>)
------|PyCapsule                    ::  <class 'PyCapsule'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'PyCapsule'>, <class 'object'>)
------|Quitter                    ::  <class '_sitebuiltins.Quitter'>  --module:  _sitebuiltins  --bases:  (<class 'object'>,)  --mro:  (<class '_sitebuiltins.Quitter'>, <class 'object'>)
------|RLock                    ::  <class '_thread.RLock'>  --module:  _thread  --bases:  (<class 'object'>,)  --mro:  (<class '_thread.RLock'>, <class 'object'>)
------|ReferenceType                    ::  <class 'weakref.ReferenceType'>  --module:  weakref  --bases:  (<class 'object'>,)  --mro:  (<class 'weakref.ReferenceType'>, <class 'object'>)
------|Repr                    ::  <class 'reprlib.Repr'>  --module:  reprlib  --bases:  (<class 'object'>,)  --mro:  (<class 'reprlib.Repr'>, <class 'object'>)
------|ScandirIterator                    ::  <class 'posix.ScandirIterator'>  --module:  posix  --bases:  (<class 'object'>,)  --mro:  (<class 'posix.ScandirIterator'>, <class 'object'>)
------|SimpleNamespace                    ::  <class 'types.SimpleNamespace'>  --module:  types  --bases:  (<class 'object'>,)  --mro:  (<class 'types.SimpleNamespace'>, <class 'object'>)
------|Sized                    ::  <class 'collections.abc.Sized'>  --module:  collections.abc  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.abc.Sized'>, <class 'object'>)
------|------|Collection                    ::  <class 'collections.abc.Collection'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>)  --mro:  (<class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Mapping                    ::  <class 'collections.abc.Mapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableMapping                    ::  <class 'collections.abc.MutableMapping'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Mapping'>,)  --mro:  (<class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|ChainMap                    ::  <class 'collections.ChainMap'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.ChainMap'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserDict                    ::  <class 'collections.UserDict'>  --module:  collections  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'collections.UserDict'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_Environ                    ::  <class 'os._Environ'>  --module:  os  --bases:  (<class 'collections.abc.MutableMapping'>,)  --mro:  (<class 'os._Environ'>, <class 'collections.abc.MutableMapping'>, <class 'collections.abc.Mapping'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Sequence                    ::  <class 'collections.abc.Sequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ByteString                    ::  <class 'collections.abc.ByteString'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.ByteString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSequence                    ::  <class 'collections.abc.MutableSequence'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|UserList                    ::  <class 'collections.UserList'>  --module:  collections  --bases:  (<class 'collections.abc.MutableSequence'>,)  --mro:  (<class 'collections.UserList'>, <class 'collections.abc.MutableSequence'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|UserString                    ::  <class 'collections.UserString'>  --module:  collections  --bases:  (<class 'collections.abc.Sequence'>,)  --mro:  (<class 'collections.UserString'>, <class 'collections.abc.Sequence'>, <class 'collections.abc.Reversible'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|Set                    ::  <class 'collections.abc.Set'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Collection'>,)  --mro:  (<class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|ItemsView                    ::  <class 'collections.abc.ItemsView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictItemsView                    ::  <class 'collections._OrderedDictItemsView'>  --module:  collections  --bases:  (<class 'collections.abc.ItemsView'>,)  --mro:  (<class 'collections._OrderedDictItemsView'>, <class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|KeysView                    ::  <class 'collections.abc.KeysView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|------|_OrderedDictKeysView                    ::  <class 'collections._OrderedDictKeysView'>  --module:  collections  --bases:  (<class 'collections.abc.KeysView'>,)  --mro:  (<class 'collections._OrderedDictKeysView'>, <class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|MutableSet                    ::  <class 'collections.abc.MutableSet'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Set'>,)  --mro:  (<class 'collections.abc.MutableSet'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|ValuesView                    ::  <class 'collections.abc.ValuesView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictValuesView                    ::  <class 'collections._OrderedDictValuesView'>  --module:  collections  --bases:  (<class 'collections.abc.ValuesView'>,)  --mro:  (<class 'collections._OrderedDictValuesView'>, <class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|MappingView                    ::  <class 'collections.abc.MappingView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.Sized'>,)  --mro:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Sized'>, <class 'object'>)
------|------|------|ItemsView                    ::  <class 'collections.abc.ItemsView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictItemsView                    ::  <class 'collections._OrderedDictItemsView'>  --module:  collections  --bases:  (<class 'collections.abc.ItemsView'>,)  --mro:  (<class 'collections._OrderedDictItemsView'>, <class 'collections.abc.ItemsView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|KeysView                    ::  <class 'collections.abc.KeysView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>)  --mro:  (<class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictKeysView                    ::  <class 'collections._OrderedDictKeysView'>  --module:  collections  --bases:  (<class 'collections.abc.KeysView'>,)  --mro:  (<class 'collections._OrderedDictKeysView'>, <class 'collections.abc.KeysView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Set'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|ValuesView                    ::  <class 'collections.abc.ValuesView'>  --module:  collections.abc  --bases:  (<class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>)  --mro:  (<class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|------|------|------|_OrderedDictValuesView                    ::  <class 'collections._OrderedDictValuesView'>  --module:  collections  --bases:  (<class 'collections.abc.ValuesView'>,)  --mro:  (<class 'collections._OrderedDictValuesView'>, <class 'collections.abc.ValuesView'>, <class 'collections.abc.MappingView'>, <class 'collections.abc.Collection'>, <class 'collections.abc.Sized'>, <class 'collections.abc.Iterable'>, <class 'collections.abc.Container'>, <class 'object'>)
------|StreamReaderWriter                    ::  <class 'codecs.StreamReaderWriter'>  --module:  codecs  --bases:  (<class 'object'>,)  --mro:  (<class 'codecs.StreamReaderWriter'>, <class 'object'>)
------|StreamRecoder                    ::  <class 'codecs.StreamRecoder'>  --module:  codecs  --bases:  (<class 'object'>,)  --mro:  (<class 'codecs.StreamRecoder'>, <class 'object'>)
------|Token                    ::  <class '_contextvars.Token'>  --module:  _contextvars  --bases:  (<class 'object'>,)  --mro:  (<class '_contextvars.Token'>, <class 'object'>)
------|UnionType                    ::  <class 'types.UnionType'>  --module:  types  --bases:  (<class 'object'>,)  --mro:  (<class 'types.UnionType'>, <class 'object'>)
------|WarningMessage                    ::  <class 'warnings.WarningMessage'>  --module:  warnings  --bases:  (<class 'object'>,)  --mro:  (<class 'warnings.WarningMessage'>, <class 'object'>)
------|WindowsRegistryFinder                    ::  <class '_frozen_importlib_external.WindowsRegistryFinder'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external.WindowsRegistryFinder'>, <class 'object'>)
------|_BaseExitStack                    ::  <class 'contextlib._BaseExitStack'>  --module:  contextlib  --bases:  (<class 'object'>,)  --mro:  (<class 'contextlib._BaseExitStack'>, <class 'object'>)
------|------|AsyncExitStack                    ::  <class 'contextlib.AsyncExitStack'>  --module:  contextlib  --bases:  (<class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractAsyncContextManager'>)  --mro:  (<class 'contextlib.AsyncExitStack'>, <class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|------|ExitStack                    ::  <class 'contextlib.ExitStack'>  --module:  contextlib  --bases:  (<class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractContextManager'>)  --mro:  (<class 'contextlib.ExitStack'>, <class 'contextlib._BaseExitStack'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'object'>)
------|_BytesIOBuffer                    ::  <class '_io._BytesIOBuffer'>  --module:  _io  --bases:  (<class 'object'>,)  --mro:  (<class '_io._BytesIOBuffer'>, <class 'object'>)
------|_DummyModuleLock                    ::  <class '_frozen_importlib._DummyModuleLock'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib._DummyModuleLock'>, <class 'object'>)
------|_GeneratorContextManagerBase                    ::  <class 'contextlib._GeneratorContextManagerBase'>  --module:  contextlib  --bases:  (<class 'object'>,)  --mro:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'object'>)
------|------|_AsyncGeneratorContextManager                    ::  <class 'contextlib._AsyncGeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'contextlib.AsyncContextDecorator'>)  --mro:  (<class 'contextlib._AsyncGeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractAsyncContextManager'>, <class 'abc.ABC'>, <class 'contextlib.AsyncContextDecorator'>, <class 'object'>)
------|------|_GeneratorContextManager                    ::  <class 'contextlib._GeneratorContextManager'>  --module:  contextlib  --bases:  (<class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'contextlib.ContextDecorator'>)  --mro:  (<class 'contextlib._GeneratorContextManager'>, <class 'contextlib._GeneratorContextManagerBase'>, <class 'contextlib.AbstractContextManager'>, <class 'abc.ABC'>, <class 'contextlib.ContextDecorator'>, <class 'object'>)
------|_GeneratorWrapper                    ::  <class 'types._GeneratorWrapper'>  --module:  types  --bases:  (<class 'object'>,)  --mro:  (<class 'types._GeneratorWrapper'>, <class 'object'>)
------|_Helper                    ::  <class '_sitebuiltins._Helper'>  --module:  _sitebuiltins  --bases:  (<class 'object'>,)  --mro:  (<class '_sitebuiltins._Helper'>, <class 'object'>)
------|_IOBase                    ::  <class '_io._IOBase'>  --module:  _io  --bases:  (<class 'object'>,)  --mro:  (<class '_io._IOBase'>, <class 'object'>)
------|------|IOBase                    ::  <class 'io.IOBase'>  --module:  io  --bases:  (<class '_io._IOBase'>,)  --mro:  (<class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedIOBase                    ::  <class 'io.BufferedIOBase'>  --module:  io  --bases:  (<class '_io._BufferedIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.BufferedIOBase'>, <class '_io._BufferedIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|RawIOBase                    ::  <class 'io.RawIOBase'>  --module:  io  --bases:  (<class '_io._RawIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.RawIOBase'>, <class '_io._RawIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|TextIOBase                    ::  <class 'io.TextIOBase'>  --module:  io  --bases:  (<class '_io._TextIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.TextIOBase'>, <class '_io._TextIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|_BufferedIOBase                    ::  <class '_io._BufferedIOBase'>  --module:  _io  --bases:  (<class '_io._IOBase'>,)  --mro:  (<class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedIOBase                    ::  <class 'io.BufferedIOBase'>  --module:  io  --bases:  (<class '_io._BufferedIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.BufferedIOBase'>, <class '_io._BufferedIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedRWPair                    ::  <class '_io.BufferedRWPair'>  --module:  _io  --bases:  (<class '_io._BufferedIOBase'>,)  --mro:  (<class '_io.BufferedRWPair'>, <class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedRandom                    ::  <class '_io.BufferedRandom'>  --module:  _io  --bases:  (<class '_io._BufferedIOBase'>,)  --mro:  (<class '_io.BufferedRandom'>, <class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedReader                    ::  <class '_io.BufferedReader'>  --module:  _io  --bases:  (<class '_io._BufferedIOBase'>,)  --mro:  (<class '_io.BufferedReader'>, <class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BufferedWriter                    ::  <class '_io.BufferedWriter'>  --module:  _io  --bases:  (<class '_io._BufferedIOBase'>,)  --mro:  (<class '_io.BufferedWriter'>, <class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|BytesIO                    ::  <class '_io.BytesIO'>  --module:  _io  --bases:  (<class '_io._BufferedIOBase'>,)  --mro:  (<class '_io.BytesIO'>, <class '_io._BufferedIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|_RawIOBase                    ::  <class '_io._RawIOBase'>  --module:  _io  --bases:  (<class '_io._IOBase'>,)  --mro:  (<class '_io._RawIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|FileIO                    ::  <class '_io.FileIO'>  --module:  _io  --bases:  (<class '_io._RawIOBase'>,)  --mro:  (<class '_io.FileIO'>, <class '_io._RawIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|RawIOBase                    ::  <class 'io.RawIOBase'>  --module:  io  --bases:  (<class '_io._RawIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.RawIOBase'>, <class '_io._RawIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|_TextIOBase                    ::  <class '_io._TextIOBase'>  --module:  _io  --bases:  (<class '_io._IOBase'>,)  --mro:  (<class '_io._TextIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|StringIO                    ::  <class '_io.StringIO'>  --module:  _io  --bases:  (<class '_io._TextIOBase'>,)  --mro:  (<class '_io.StringIO'>, <class '_io._TextIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|TextIOBase                    ::  <class 'io.TextIOBase'>  --module:  io  --bases:  (<class '_io._TextIOBase'>, <class 'io.IOBase'>)  --mro:  (<class 'io.TextIOBase'>, <class '_io._TextIOBase'>, <class 'io.IOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|------|------|TextIOWrapper                    ::  <class '_io.TextIOWrapper'>  --module:  _io  --bases:  (<class '_io._TextIOBase'>,)  --mro:  (<class '_io.TextIOWrapper'>, <class '_io._TextIOBase'>, <class '_io._IOBase'>, <class 'object'>)
------|_ImportLockContext                    ::  <class '_frozen_importlib._ImportLockContext'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib._ImportLockContext'>, <class 'object'>)
------|_Link                    ::  <class 'collections._Link'>  --module:  collections  --bases:  (<class 'object'>,)  --mro:  (<class 'collections._Link'>, <class 'object'>)
------|_LoaderBasics                    ::  <class '_frozen_importlib_external._LoaderBasics'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|ExtensionFileLoader                    ::  <class '_frozen_importlib_external.ExtensionFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>)  --mro:  (<class '_frozen_importlib_external.ExtensionFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|SourceLoader                    ::  <class '_frozen_importlib_external.SourceLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external._LoaderBasics'>,)  --mro:  (<class '_frozen_importlib_external.SourceLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|------|SourceFileLoader                    ::  <class '_frozen_importlib_external.SourceFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external.SourceLoader'>)  --mro:  (<class '_frozen_importlib_external.SourceFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external.SourceLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|SourcelessFileLoader                    ::  <class '_frozen_importlib_external.SourcelessFileLoader'>  --module:  _frozen_importlib_external  --bases:  (<class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>)  --mro:  (<class '_frozen_importlib_external.SourcelessFileLoader'>, <class '_frozen_importlib_external.FileLoader'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|------|zipimporter                    ::  <class 'zipimport.zipimporter'>  --module:  zipimport  --bases:  (<class '_frozen_importlib_external._LoaderBasics'>,)  --mro:  (<class 'zipimport.zipimporter'>, <class '_frozen_importlib_external._LoaderBasics'>, <class 'object'>)
------|_ModuleLock                    ::  <class '_frozen_importlib._ModuleLock'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib._ModuleLock'>, <class 'object'>)
------|_ModuleLockManager                    ::  <class '_frozen_importlib._ModuleLockManager'>  --module:  _frozen_importlib  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib._ModuleLockManager'>, <class 'object'>)
------|_NamespaceLoader                    ::  <class '_frozen_importlib_external._NamespaceLoader'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external._NamespaceLoader'>, <class 'object'>)
------|_NamespacePath                    ::  <class '_frozen_importlib_external._NamespacePath'>  --module:  _frozen_importlib_external  --bases:  (<class 'object'>,)  --mro:  (<class '_frozen_importlib_external._NamespacePath'>, <class 'object'>)
------|_Printer                    ::  <class '_sitebuiltins._Printer'>  --module:  _sitebuiltins  --bases:  (<class 'object'>,)  --mro:  (<class '_sitebuiltins._Printer'>, <class 'object'>)
------|_TrivialRe                    ::  <class '_distutils_hack._TrivialRe'>  --module:  _distutils_hack  --bases:  (<class 'object'>,)  --mro:  (<class '_distutils_hack._TrivialRe'>, <class 'object'>)
------|_abc_data                    ::  <class '_abc._abc_data'>  --module:  _abc  --bases:  (<class 'object'>,)  --mro:  (<class '_abc._abc_data'>, <class 'object'>)
------|_deque_iterator                    ::  <class '_collections._deque_iterator'>  --module:  _collections  --bases:  (<class 'object'>,)  --mro:  (<class '_collections._deque_iterator'>, <class 'object'>)
------|_deque_reverse_iterator                    ::  <class '_collections._deque_reverse_iterator'>  --module:  _collections  --bases:  (<class 'object'>,)  --mro:  (<class '_collections._deque_reverse_iterator'>, <class 'object'>)
------|_grouper                    ::  <class 'itertools._grouper'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools._grouper'>, <class 'object'>)
------|_local                    ::  <class '_thread._local'>  --module:  _thread  --bases:  (<class 'object'>,)  --mro:  (<class '_thread._local'>, <class 'object'>)
------|_localdummy                    ::  <class '_thread._localdummy'>  --module:  _thread  --bases:  (<class 'object'>,)  --mro:  (<class '_thread._localdummy'>, <class 'object'>)
------|_lru_cache_wrapper                    ::  <class 'functools._lru_cache_wrapper'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools._lru_cache_wrapper'>, <class 'object'>)
------|_lru_list_elem                    ::  <class 'functools._lru_list_elem'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools._lru_list_elem'>, <class 'object'>)
------|_tee                    ::  <class 'itertools._tee'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools._tee'>, <class 'object'>)
------|_tee_dataobject                    ::  <class 'itertools._tee_dataobject'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools._tee_dataobject'>, <class 'object'>)
------|_tuplegetter                    ::  <class '_collections._tuplegetter'>  --module:  _collections  --bases:  (<class 'object'>,)  --mro:  (<class '_collections._tuplegetter'>, <class 'object'>)
------|_wrap_close                    ::  <class 'os._wrap_close'>  --module:  os  --bases:  (<class 'object'>,)  --mro:  (<class 'os._wrap_close'>, <class 'object'>)
------|accumulate                    ::  <class 'itertools.accumulate'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.accumulate'>, <class 'object'>)
------|anext_awaitable                    ::  <class 'anext_awaitable'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'anext_awaitable'>, <class 'object'>)
------|async_generator                    ::  <class 'async_generator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'async_generator'>, <class 'object'>)
------|async_generator_asend                    ::  <class 'async_generator_asend'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'async_generator_asend'>, <class 'object'>)
------|async_generator_athrow                    ::  <class 'async_generator_athrow'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'async_generator_athrow'>, <class 'object'>)
------|async_generator_wrapped_value                    ::  <class 'async_generator_wrapped_value'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'async_generator_wrapped_value'>, <class 'object'>)
------|attrgetter                    ::  <class 'operator.attrgetter'>  --module:  operator  --bases:  (<class 'object'>,)  --mro:  (<class 'operator.attrgetter'>, <class 'object'>)
------|attrgetter                    ::  <class 'operator.attrgetter'>  --module:  operator  --bases:  (<class 'object'>,)  --mro:  (<class 'operator.attrgetter'>, <class 'object'>)
------|builtin_function_or_method                    ::  <class 'builtin_function_or_method'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'builtin_function_or_method'>, <class 'object'>)
------|------|builtin_method                    ::  <class 'builtin_method'>  --module:  builtins  --bases:  (<class 'builtin_function_or_method'>,)  --mro:  (<class 'builtin_method'>, <class 'builtin_function_or_method'>, <class 'object'>)
------|bytearray                    ::  <class 'bytearray'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'bytearray'>, <class 'object'>)
------|bytearray_iterator                    ::  <class 'bytearray_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'bytearray_iterator'>, <class 'object'>)
------|bytes                    ::  <class 'bytes'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'bytes'>, <class 'object'>)
------|bytes_iterator                    ::  <class 'bytes_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'bytes_iterator'>, <class 'object'>)
------|cached_property                    ::  <class 'functools.cached_property'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.cached_property'>, <class 'object'>)
------|callable_iterator                    ::  <class 'callable_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'callable_iterator'>, <class 'object'>)
------|catch_warnings                    ::  <class 'warnings.catch_warnings'>  --module:  warnings  --bases:  (<class 'object'>,)  --mro:  (<class 'warnings.catch_warnings'>, <class 'object'>)
------|cell                    ::  <class 'cell'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'cell'>, <class 'object'>)
------|chain                    ::  <class 'itertools.chain'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.chain'>, <class 'object'>)
------|classmethod                    ::  <class 'classmethod'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'classmethod'>, <class 'object'>)
------|------|abstractclassmethod                    ::  <class 'abc.abstractclassmethod'>  --module:  abc  --bases:  (<class 'classmethod'>,)  --mro:  (<class 'abc.abstractclassmethod'>, <class 'classmethod'>, <class 'object'>)
------|classmethod_descriptor                    ::  <class 'classmethod_descriptor'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'classmethod_descriptor'>, <class 'object'>)
------|code                    ::  <class 'code'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'code'>, <class 'object'>)
------|combinations                    ::  <class 'itertools.combinations'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.combinations'>, <class 'object'>)
------|combinations_with_replacement                    ::  <class 'itertools.combinations_with_replacement'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.combinations_with_replacement'>, <class 'object'>)
------|complex                    ::  <class 'complex'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'complex'>, <class 'object'>)
------|compress                    ::  <class 'itertools.compress'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.compress'>, <class 'object'>)
------|coroutine                    ::  <class 'coroutine'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'coroutine'>, <class 'object'>)
------|coroutine_wrapper                    ::  <class 'coroutine_wrapper'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'coroutine_wrapper'>, <class 'object'>)
------|count                    ::  <class 'itertools.count'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.count'>, <class 'object'>)
------|cycle                    ::  <class 'itertools.cycle'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.cycle'>, <class 'object'>)
------|deque                    ::  <class 'collections.deque'>  --module:  collections  --bases:  (<class 'object'>,)  --mro:  (<class 'collections.deque'>, <class 'object'>)
------|dict                    ::  <class 'dict'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict'>, <class 'object'>)
------|------|Counter                    ::  <class 'collections.Counter'>  --module:  collections  --bases:  (<class 'dict'>,)  --mro:  (<class 'collections.Counter'>, <class 'dict'>, <class 'object'>)
------|------|OrderedDict                    ::  <class 'collections.OrderedDict'>  --module:  collections  --bases:  (<class 'dict'>,)  --mro:  (<class 'collections.OrderedDict'>, <class 'dict'>, <class 'object'>)
------|------|defaultdict                    ::  <class 'collections.defaultdict'>  --module:  collections  --bases:  (<class 'dict'>,)  --mro:  (<class 'collections.defaultdict'>, <class 'dict'>, <class 'object'>)
------|dict_itemiterator                    ::  <class 'dict_itemiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_itemiterator'>, <class 'object'>)
------|dict_items                    ::  <class 'dict_items'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_items'>, <class 'object'>)
------|------|odict_items                    ::  <class 'odict_items'>  --module:  builtins  --bases:  (<class 'dict_items'>,)  --mro:  (<class 'odict_items'>, <class 'dict_items'>, <class 'object'>)
------|dict_keyiterator                    ::  <class 'dict_keyiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_keyiterator'>, <class 'object'>)
------|dict_keys                    ::  <class 'dict_keys'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_keys'>, <class 'object'>)
------|------|odict_keys                    ::  <class 'odict_keys'>  --module:  builtins  --bases:  (<class 'dict_keys'>,)  --mro:  (<class 'odict_keys'>, <class 'dict_keys'>, <class 'object'>)
------|dict_reverseitemiterator                    ::  <class 'dict_reverseitemiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_reverseitemiterator'>, <class 'object'>)
------|dict_reversekeyiterator                    ::  <class 'dict_reversekeyiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_reversekeyiterator'>, <class 'object'>)
------|dict_reversevalueiterator                    ::  <class 'dict_reversevalueiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_reversevalueiterator'>, <class 'object'>)
------|dict_valueiterator                    ::  <class 'dict_valueiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_valueiterator'>, <class 'object'>)
------|dict_values                    ::  <class 'dict_values'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'dict_values'>, <class 'object'>)
------|------|odict_values                    ::  <class 'odict_values'>  --module:  builtins  --bases:  (<class 'dict_values'>,)  --mro:  (<class 'odict_values'>, <class 'dict_values'>, <class 'object'>)
------|dropwhile                    ::  <class 'itertools.dropwhile'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.dropwhile'>, <class 'object'>)
------|ellipsis                    ::  <class 'ellipsis'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'ellipsis'>, <class 'object'>)
------|enumerate                    ::  <class 'enumerate'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'enumerate'>, <class 'object'>)
------|fieldnameiterator                    ::  <class 'fieldnameiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'fieldnameiterator'>, <class 'object'>)
------|filter                    ::  <class 'filter'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'filter'>, <class 'object'>)
------|filterfalse                    ::  <class 'itertools.filterfalse'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.filterfalse'>, <class 'object'>)
------|float                    ::  <class 'float'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'float'>, <class 'object'>)
------|formatteriterator                    ::  <class 'formatteriterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'formatteriterator'>, <class 'object'>)
------|frame                    ::  <class 'frame'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'frame'>, <class 'object'>)
------|frozenset                    ::  <class 'frozenset'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'frozenset'>, <class 'object'>)
------|function                    ::  <class 'function'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'function'>, <class 'object'>)
------|generator                    ::  <class 'generator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'generator'>, <class 'object'>)
------|getset_descriptor                    ::  <class 'getset_descriptor'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'getset_descriptor'>, <class 'object'>)
------|groupby                    ::  <class 'itertools.groupby'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.groupby'>, <class 'object'>)
------|hamt                    ::  <class 'hamt'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'hamt'>, <class 'object'>)
------|hamt_array_node                    ::  <class 'hamt_array_node'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'hamt_array_node'>, <class 'object'>)
------|hamt_bitmap_node                    ::  <class 'hamt_bitmap_node'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'hamt_bitmap_node'>, <class 'object'>)
------|hamt_collision_node                    ::  <class 'hamt_collision_node'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'hamt_collision_node'>, <class 'object'>)
------|instancemethod                    ::  <class 'instancemethod'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'instancemethod'>, <class 'object'>)
------|int                    ::  <class 'int'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'int'>, <class 'object'>)
------|------|bool                    ::  <class 'bool'>  --module:  builtins  --bases:  (<class 'int'>,)  --mro:  (<class 'bool'>, <class 'int'>, <class 'object'>)
------|islice                    ::  <class 'itertools.islice'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.islice'>, <class 'object'>)
------|itemgetter                    ::  <class 'operator.itemgetter'>  --module:  operator  --bases:  (<class 'object'>,)  --mro:  (<class 'operator.itemgetter'>, <class 'object'>)
------|itemgetter                    ::  <class 'operator.itemgetter'>  --module:  operator  --bases:  (<class 'object'>,)  --mro:  (<class 'operator.itemgetter'>, <class 'object'>)
------|items                    ::  <class 'items'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'items'>, <class 'object'>)
------|iterator                    ::  <class 'iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'iterator'>, <class 'object'>)
------|keys                    ::  <class 'keys'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'keys'>, <class 'object'>)
------|list                    ::  <class 'list'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'list'>, <class 'object'>)
------|------|_HashedSeq                    ::  <class 'functools._HashedSeq'>  --module:  functools  --bases:  (<class 'list'>,)  --mro:  (<class 'functools._HashedSeq'>, <class 'list'>, <class 'object'>)
------|list_iterator                    ::  <class 'list_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'list_iterator'>, <class 'object'>)
------|list_reverseiterator                    ::  <class 'list_reverseiterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'list_reverseiterator'>, <class 'object'>)
------|lock                    ::  <class '_thread.lock'>  --module:  _thread  --bases:  (<class 'object'>,)  --mro:  (<class '_thread.lock'>, <class 'object'>)
------|longrange_iterator                    ::  <class 'longrange_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'longrange_iterator'>, <class 'object'>)
------|managedbuffer                    ::  <class 'managedbuffer'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'managedbuffer'>, <class 'object'>)
------|map                    ::  <class 'map'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'map'>, <class 'object'>)
------|mappingproxy                    ::  <class 'mappingproxy'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'mappingproxy'>, <class 'object'>)
------|member_descriptor                    ::  <class 'member_descriptor'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'member_descriptor'>, <class 'object'>)
------|memoryview                    ::  <class 'memoryview'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'memoryview'>, <class 'object'>)
------|method                    ::  <class 'method'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'method'>, <class 'object'>)
------|method-wrapper                    ::  <class 'method-wrapper'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'method-wrapper'>, <class 'object'>)
------|method_descriptor                    ::  <class 'method_descriptor'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'method_descriptor'>, <class 'object'>)
------|methodcaller                    ::  <class 'operator.methodcaller'>  --module:  operator  --bases:  (<class 'object'>,)  --mro:  (<class 'operator.methodcaller'>, <class 'object'>)
------|module                    ::  <class 'module'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'module'>, <class 'object'>)
------|------|_LazyModule                    ::  <class 'importlib.util._LazyModule'>  --module:  importlib.util  --bases:  (<class 'module'>,)  --mro:  (<class 'importlib.util._LazyModule'>, <class 'module'>, <class 'object'>)
------|moduledef                    ::  <class 'moduledef'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'moduledef'>, <class 'object'>)
------|odict_iterator                    ::  <class 'odict_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'odict_iterator'>, <class 'object'>)
------|pairwise                    ::  <class 'itertools.pairwise'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.pairwise'>, <class 'object'>)
------|partial                    ::  <class 'functools.partial'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.partial'>, <class 'object'>)
------|partial                    ::  <class 'functools.partial'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.partial'>, <class 'object'>)
------|partialmethod                    ::  <class 'functools.partialmethod'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.partialmethod'>, <class 'object'>)
------|permutations                    ::  <class 'itertools.permutations'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.permutations'>, <class 'object'>)
------|product                    ::  <class 'itertools.product'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.product'>, <class 'object'>)
------|property                    ::  <class 'property'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'property'>, <class 'object'>)
------|------|abstractproperty                    ::  <class 'abc.abstractproperty'>  --module:  abc  --bases:  (<class 'property'>,)  --mro:  (<class 'abc.abstractproperty'>, <class 'property'>, <class 'object'>)
------|range                    ::  <class 'range'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'range'>, <class 'object'>)
------|range_iterator                    ::  <class 'range_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'range_iterator'>, <class 'object'>)
------|repeat                    ::  <class 'itertools.repeat'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.repeat'>, <class 'object'>)
------|reversed                    ::  <class 'reversed'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'reversed'>, <class 'object'>)
------|set                    ::  <class 'set'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'set'>, <class 'object'>)
------|set_iterator                    ::  <class 'set_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'set_iterator'>, <class 'object'>)
------|shim                    ::  <class '_distutils_hack.shim'>  --module:  _distutils_hack  --bases:  (<class 'object'>,)  --mro:  (<class '_distutils_hack.shim'>, <class 'object'>)
------|singledispatchmethod                    ::  <class 'functools.singledispatchmethod'>  --module:  functools  --bases:  (<class 'object'>,)  --mro:  (<class 'functools.singledispatchmethod'>, <class 'object'>)
------|slice                    ::  <class 'slice'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'slice'>, <class 'object'>)
------|starmap                    ::  <class 'itertools.starmap'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.starmap'>, <class 'object'>)
------|staticmethod                    ::  <class 'staticmethod'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'staticmethod'>, <class 'object'>)
------|------|abstractstaticmethod                    ::  <class 'abc.abstractstaticmethod'>  --module:  abc  --bases:  (<class 'staticmethod'>,)  --mro:  (<class 'abc.abstractstaticmethod'>, <class 'staticmethod'>, <class 'object'>)
------|stderrprinter                    ::  <class 'stderrprinter'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'stderrprinter'>, <class 'object'>)
------|str                    ::  <class 'str'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'str'>, <class 'object'>)
------|str_iterator                    ::  <class 'str_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'str_iterator'>, <class 'object'>)
------|super                    ::  <class 'super'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'super'>, <class 'object'>)
------|symtable entry                    ::  <class 'symtable entry'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'symtable entry'>, <class 'object'>)
------|takewhile                    ::  <class 'itertools.takewhile'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.takewhile'>, <class 'object'>)
------|traceback                    ::  <class 'traceback'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'traceback'>, <class 'object'>)
------|tuple                    ::  <class 'tuple'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'tuple'>, <class 'object'>)
------|------|CacheInfo                    ::  <class 'functools.CacheInfo'>  --module:  functools  --bases:  (<class 'tuple'>,)  --mro:  (<class 'functools.CacheInfo'>, <class 'tuple'>, <class 'object'>)
------|------|CodecInfo                    ::  <class 'codecs.CodecInfo'>  --module:  codecs  --bases:  (<class 'tuple'>,)  --mro:  (<class 'codecs.CodecInfo'>, <class 'tuple'>, <class 'object'>)
------|------|UnraisableHookArgs                    ::  <class 'UnraisableHookArgs'>  --module:  builtins  --bases:  (<class 'tuple'>,)  --mro:  (<class 'UnraisableHookArgs'>, <class 'tuple'>, <class 'object'>)
------|------|_ExceptHookArgs                    ::  <class '_thread._ExceptHookArgs'>  --module:  _thread  --bases:  (<class 'tuple'>,)  --mro:  (<class '_thread._ExceptHookArgs'>, <class 'tuple'>, <class 'object'>)
------|------|asyncgen_hooks                    ::  <class 'asyncgen_hooks'>  --module:  builtins  --bases:  (<class 'tuple'>,)  --mro:  (<class 'asyncgen_hooks'>, <class 'tuple'>, <class 'object'>)
------|------|flags                    ::  <class 'sys.flags'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.flags'>, <class 'tuple'>, <class 'object'>)
------|------|float_info                    ::  <class 'sys.float_info'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.float_info'>, <class 'tuple'>, <class 'object'>)
------|------|hash_info                    ::  <class 'sys.hash_info'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.hash_info'>, <class 'tuple'>, <class 'object'>)
------|------|int_info                    ::  <class 'sys.int_info'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.int_info'>, <class 'tuple'>, <class 'object'>)
------|------|sched_param                    ::  <class 'posix.sched_param'>  --module:  posix  --bases:  (<class 'tuple'>,)  --mro:  (<class 'posix.sched_param'>, <class 'tuple'>, <class 'object'>)
------|------|stat_result                    ::  <class 'os.stat_result'>  --module:  os  --bases:  (<class 'tuple'>,)  --mro:  (<class 'os.stat_result'>, <class 'tuple'>, <class 'object'>)
------|------|statvfs_result                    ::  <class 'os.statvfs_result'>  --module:  os  --bases:  (<class 'tuple'>,)  --mro:  (<class 'os.statvfs_result'>, <class 'tuple'>, <class 'object'>)
------|------|struct_siginfo                    ::  <class 'signal.struct_siginfo'>  --module:  signal  --bases:  (<class 'tuple'>,)  --mro:  (<class 'signal.struct_siginfo'>, <class 'tuple'>, <class 'object'>)
------|------|struct_time                    ::  <class 'time.struct_time'>  --module:  time  --bases:  (<class 'tuple'>,)  --mro:  (<class 'time.struct_time'>, <class 'tuple'>, <class 'object'>)
------|------|terminal_size                    ::  <class 'os.terminal_size'>  --module:  os  --bases:  (<class 'tuple'>,)  --mro:  (<class 'os.terminal_size'>, <class 'tuple'>, <class 'object'>)
------|------|thread_info                    ::  <class 'sys.thread_info'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.thread_info'>, <class 'tuple'>, <class 'object'>)
------|------|times_result                    ::  <class 'posix.times_result'>  --module:  posix  --bases:  (<class 'tuple'>,)  --mro:  (<class 'posix.times_result'>, <class 'tuple'>, <class 'object'>)
------|------|uname_result                    ::  <class 'posix.uname_result'>  --module:  posix  --bases:  (<class 'tuple'>,)  --mro:  (<class 'posix.uname_result'>, <class 'tuple'>, <class 'object'>)
------|------|version_info                    ::  <class 'sys.version_info'>  --module:  sys  --bases:  (<class 'tuple'>,)  --mro:  (<class 'sys.version_info'>, <class 'tuple'>, <class 'object'>)
------|------|waitid_result                    ::  <class 'posix.waitid_result'>  --module:  posix  --bases:  (<class 'tuple'>,)  --mro:  (<class 'posix.waitid_result'>, <class 'tuple'>, <class 'object'>)
------|tuple_iterator                    ::  <class 'tuple_iterator'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'tuple_iterator'>, <class 'object'>)
------|type                    ::  <class 'type'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'type'>, <class 'object'>)
------|values                    ::  <class 'values'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'values'>, <class 'object'>)
------|wrapper_descriptor                    ::  <class 'wrapper_descriptor'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'wrapper_descriptor'>, <class 'object'>)
------|zip                    ::  <class 'zip'>  --module:  builtins  --bases:  (<class 'object'>,)  --mro:  (<class 'zip'>, <class 'object'>)
------|zip_longest                    ::  <class 'itertools.zip_longest'>  --module:  itertools  --bases:  (<class 'object'>,)  --mro:  (<class 'itertools.zip_longest'>, <class 'object'>)
