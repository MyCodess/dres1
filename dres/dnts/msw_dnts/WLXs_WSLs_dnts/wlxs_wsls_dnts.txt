________________ MS_wsl_dnts / WLXs /  Windows Subsystem for Linux (WSL) : ________________________________________________________
- start: 2402

---  acrons/abbrv_evv:
wlx[s]  ==  WSLs / wsl-stuff / MS_wsl-stuff   


#####  ==========  urls/nts:
	- https://learn.microsoft.com/en-us/windows/wsl/ 
	- https://learn.microsoft.com/en-us/windows/wsl/install-manual   : manual-installation !
    _______:  DIFFs / Vocabs:
	- ! host-sys == Win10-/Win11-main-real-OS-installed which contains the WSL-distros/-engine/-kernel !
##________________________________________  ___________________________


#####  ==========  installs/setup/... , wsl.exe :
	- "wsl --install"   installation  :  https://learn.microsoft.com/en-us/windows/wsl/install
	- "manual-installation" :  https://learn.microsoft.com/en-us/windows/wsl/install-manual
	- wsl --help   ##-- https://learn.microsoft.com/en-us/windows/wsl/basic-commands
	
    _______:  manual-install + prereq-allg (enabling wsl + VM + ...) :
	0- preReq: win-10 >  Build 19041 ; so check: PS1>  winver
	- BIOS-virtualization enabled!
	--  open PS-Admin :
	1- enable wsl on your win:
		You must first enable the "Windows Subsystem for Linux" optional feature before installing any Linux distributions on Windows.
		Open PowerShell as Administrator (Start menu > PowerShell > right-click > Run as Administrator) and enter this command:
		dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
		(??or::  Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux ??)
	2- check preReqs for wsl:
		 PS1>  winver     ##--: must win-10 >  Build 19041 , win11
		 PS1>  systeminfo | find "System Type"  ##--:  must show eg: x64-based; NOT-ARM (for ARMs other downloads)!
	3- Enable Virtual Machine feature
		dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
	4- wsl-Kernel-update-DW+start(update) in admin-PS ,eg:  https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi ; wsl --update ;
	5- set WSL2 as default (instead WSL1):  wsl --set-default-version 2 ; wsl --update ;
	6- distro-install ! see dowsload-links (curl,...) there
		Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile Ubuntu.appx -UseBasicParsing   ##here eg for ubuntu
		/OR: curl.exe -L -o ubuntu-2004.appx https://aka.ms/wslubuntu2004
		install the downloaded app:  Add-AppxPackage .\app_name.appx
		/OR do the non-manually wsl-install with:  Listing : wsl --list --online ; wsl --install -d OracleLinux_8_7

    _______:  wsl --install /listings :
	- listing of installed distros/subsystems locally:  wsl --list  --verbose   ##==  wsl -l -v
	- listing of availabel distros/subsystems online:   wsl --list  --online
	- PS1-Admin:   wsl --install [-d <DistroName>]   ##--default-distro is ubuntu ! distros: https://aka.ms/wslstore
		if in bash, then have to use .exe suffix (eg to install further distros)!,as:  wsl.exe --install -d <Distribution Name> 
	
    _______:  uninstall a distro:
	- https://learn.microsoft.com/en-us/windows/wsl/faq
	wsl --unregister <distroName>   ##--as:    wsl.exe  --unregister OracleLinux_8_7
	then uninstall the app/distro (eg: OracleLinux_8_7) just as any other app: win-settings -> apps : uninstall  ##-or PS ...
##________________________________________  ___________________________


#####  ==========  config-files / install-DIRs /  ...:
	- https://learn.microsoft.com/en-us/windows/wsl/wsl-config

	_______:  DIRs / conf-files:
	--- distros-install-DIRs in winHost:
	- on winHost:   \\wsl$\   bzw.  \\wsl.localhost\   #-distro: \\wsl.localhost\OracleLinux_8_7\    ##--in explorer-win! here for the installed ora-distro!
	- in wsl-distro :  $ cd / ; explorer.exe . ;

	--- conf-files:   /etc/wsl.conf  +  %UserProfile%/.wslconfig (only WSL2 ! not WSL1 !) :
	- both conf-files does NOT exist by default ! can be created !
	- /etc/wsl.conf  (locally distro-conf-file)     <--->   %UserProfile%/.wslconfig  (globally WSL2-engine-conf-file, usu. C:\Users\<UserName>\.wslconfig )
	- ! error-in-conf-files:  If the file is missing or malformed (improper markup formatting), WSL will continue to launch as normal WITHOUT the configuration settings applied.

	_______:  /etc/wsl.conf  (per distor conf):
	- https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconf
	- /etc/wsl.conf to configure local settings per-distribution for each Linux distribution running on WSL 1 or WSL 2.
	- ! changes/modifs: restart the distro to take effect ! 8-seconds-wait-rule between shutdown-startup! check status with wsl -l -v !
	- ENTRIES : see url above !
	-  wsl.conf four sections: automount, network, interop, and user + [boot] for systemd=...

    _______:  %UserProfile%/.wslconfig  (global-conf for all distros; basically the VM-conf!)
	- https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconfig
	- %UserProfile%/.wslconfig  : globally-conf across all WSL2 distributions !so the WSL2-virtual-machine-conf ! .wslconfig to configure global settings across all installed distributions running on WSL 2 !
	- ENTERIES : see https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconfig ...
	- .wslconfig to configure global settings across all installed distributions running on WSL 2.
	- WSL1-distros:  Distributions running as WSL 1 will not be affected by .wslconfig as they are not running as a virtual machine.
	- ! changes/modifs: restart whole WSL-engine!  run wsl --shutdown to shut down the WSL 2 VM and then restart your WSL instance for these changes to take effect. 8-seconds-wait-rule between shutdown-startup! check status with wsl -l -v !

	_______:  wt / winTerminal :
	- https://learn.microsoft.com/en-us/windows/wsl/setup/environment#set-up-windows-terminal
##________________________________________  ___________________________


#####  ==========  wsl.exe-Mgms-cmds (mainly from PS1> bzw. in win):
	_______:  versions / status von wsl.exe bzw. distros :
	- wsl selber infos:   wsl.exe  --version
	- set default-WSL-version WSL1/WSL2 :  wsl --set-default-version  2   ##--set the default wsl to wsl2 for next installs ...!
	- set default distro:  wsl --set-default <Distribution Name>
	- wsl --set-default-version  2   ##--set the default wsl to wsl2 for next installs ...!
	- wsl-versions of my installed distros:   wsl.exe --list  --verbose  #== wsl -l -v
	- status vom wsl selber (nicht distros):   wsl.exe  --status
	- changing/converting the WSL-version of an installed-distro:    wsl.exe  --set-version  OracleLinux_8_7  2   ##--see wsl --help

	_______:  starts/shutdowns/...:
	--- starts:
	- in PS1> bzw. winTerminal>  wsl --distribution <Distribution Name> --user <User Name>  ##--OR:
	- in PS1> bzw. winTerminal>  just the distro-name as you see by wsl -l -v   #-eg:  PS1> OracleLinux87  ##-which is in:  C:\Users\DKX8H1N\AppData\Local\Microsoft\WindowsApps\OracleLinux87.exe

	--- shutdown-WSL /terminate-distro:
	- ! DIFF:   --shutdown  (whole WSL-engine+distros)  <--->   --terminate <only-distro-xxx> :
	- shutdown all WSL-stuff+distros+...:  wsl.exe  --shutdown
	- shutdown of distro1 :   wsl.exe --terminate OracleLinux_8_7
	- PS1>  wsl.exe --terminate OracleLinux_8_7
##________________________________________  ___________________________


#####  ==========  mounts / extHDDs ...:
	_______:  
	- https://learn.microsoft.com/en-us/windows/wsl/basic-commands#mount-a-disk-or-device
	- https://learn.microsoft.com/en-us/windows/wsl/wsl2-mount-disk

    _______:  nts-mounts :
	- DrvFs : DrvFs is a filesystem plugin to WSL that was designed to support interop between WSL/Lx-distro and the Windows filesystem. DrvFs enables WSL to mount drives with supported file systems ...
	- /etc/fstab : processing fstab can be enabled/disabled in /etc/wsl.conf ! default usu. there is no fstab or empty! can be generatedi and enables in wsl.conf !
	- !! try/check /etc/wsl.conf entries in section [automount] for default-distro-mount-settings! see https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconf :
		- root=/  #-root-automounts of local direves! default is /mnt/ , eg then /mnt/c instead /c !
		- enabled=false  ##--if automouning of local-drives!? or you prefer do it yourself in /etc/fstab !?
		- mountFsTab=true  ##--/etc/fstab should be processed by VM? or igored/false !? type of NTFS... is then DrvFs !
		- options=... : uid,gid,... for automounts for DrvFs filesystems! Only DrvFs-specific options can be specified !!
		- ! automount options are applied as the mount options for all automatically mounted drives. To change the options for a specific drive only, use the /etc/fstab file instead.
	- !! The WSL 2 mount command does not support mounting a disk (or partitions that belong to the disk) that is currently in use. wsl --mount always attaches the entire disk even if only a partition is requested. You can't mount the Windows installation disk. https://learn.microsoft.com/en-us/windows/wsl/wsl2-mount-disk
	- !! The wsl --mount command does not currently support USB/flash drives/SD card readers: 
	- !! 1kk_mesp_EncParts-mount:  If you want to access a Linux disk format that isn't supported by Windows, you can use WSL 2 to mount your disk and access its content.
	- !! DIFF:  NTFS-/mswins-parts-mounting  ("drvfs" types/driver)  <--->  Lx-/Ext4-parts-mounting !
	-  Administrator access is required to attach a disk to WSL 2. 

	--- main-mount-cmds + defaults:
	- PS1>  wsl --mount <DiskPath> [ -t <FileSystem>  -o <MountOptions> ]    ##--default type inside distro: ext4 ! default mountpoint:  /mnt/wsl
	- available filesystems in WSL2, run:   cat /proc/filesystems
	- umounts:  wsl --unmount <DiskPath>
	- ! wsl.exe : inside distro MUST use wsl.exe , NOT wsl ! on host: wsl[.exe]  !
	- ! By default, WSL 2 attempts to mount the entire disk. To mount a specific partition, run: PS1> wsl --mount <Diskpath> -p <PartitionIndex> -o  <MountOptions> 

	_______:  Type of a part query:
	- Identifying the filesystem type : bash$  blkid <BlockDevice>

	_______:  mountpoint default:
	- defaulti:  /mnt/wsl bzw. /mnt/  ,bzw:  path pointed to by the config value in wsl.conf:  automount.root
	- 

    _______:  C: mount:
	- ! mount C: to /c :  sudo vi  /etc/wsl.conf  #-bzw: sudo -e /etc/wsl.conf #and add:  [automount]\n root=/  #-and restart distro: wsl --terminate <distro>; start ... ##--default WLS2 root for mounts is /mnt/ ,so C: will be mounted to /mnt/c/ !

	_______:  NTFS mounts in distro:
	- eg:  bash$  sudo mount -t drvfs D: /mnt/d  ##--use "drvfs" file system interop plugin for NTFS/mswins

	_______:  Ext4-mounts:
	- wsl --mount <Disk>  ##--see wsl --help for options!

	_______:  USBs/extHDDs mounts :
		- !!  The wsl --mount command does not currently support USB/flash drives/SD card readers: 
		https://learn.microsoft.com/en-us/windows/wsl/connect-usb
		https://learn.microsoft.com/en-us/windows/wsl/setup/environment#mount-an-external-drive-or-usb :
		https://github.com/microsoft/WSL/issues/6011
		wsl.exe  --mount <win-URI-dev-path>  ##--get URI with: Get-WMIObject --query "..." #see URL above!

	_______:  Mounting an unpartitioned disk:
	- wsl --mount <DiskPath>  ##--get DiskPat with:  GET-CimInstance -query "SELECT * from Win32_DiskDrive"  ##--see URl above!

	_______:  Mounting a partitioned disk:
	- get DiskPath by:  PS1> GET-CimInstance -query "SELECT * from Win32_DiskDrive"    ##--see URl above!
	- Identifying the filesystem type : bash$  blkid <BlockDevice>
	- mount a Disk:  PS1>  wsl --mount <DiskPath> --bare ; lsblk ...  
	- mout a part:   PS1>  wsl --mount <DiskPath> --partition <PartitionNumber> --type <Filesystem>
##________________________________________  ___________________________


#####  ==========  NWs /Networks :
	- ! see the trys below for NW-config to work!
	- ! try/check [network] entries in /etc/wsl.conf : generateHosts=true \n generateResolvConf=false \n hostname=<syysTg> ! https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconf
	- ! not-tryed-yet, but could test a new distro with  "networkingMode = mirrored" /OR,AND autoProxy=true in  %UserProfile%/.wslconfig  (!however, which affects all distros), and check if it adopt the winHost-NWs !? default is NAT, so a local-subNW-inside-VM with own IPs,...! see https://learn.microsoft.com/en-us/windows/wsl/wsl-config#wslconfig
	- ! NW/Internet is NAT, so  NOT-working in distro: ! https://learn.microsoft.com/en-us/windows/wsl/troubleshooting  ! so in ofc1 will not be working !
	- IP-address of distro in its VM, query from host:  PS1> wsl hostname -I  ##diff -i and -I !!
	- DNS:  cat /etc/resolv.conf for the IP address of the Windows machine as seen from WSL 2 (the WSL 2 VM)
##________________________________________  ___________________________


#####  ==========  Admin-Configs-LxSys:
    _______: users-mgm wsl.exe on PS1/host ,...:
	- PW vergessen:  PS1>  wsl -u root  ; passwd u1 ;
	- default-username-for-WLS-autologin:  /etc/wls.conf : [user] default=u1 : which user to run as when first starting a WSL session.
	- default user for a distribution change:   <DistributionName> config --default-user <Username> ; ##--distroname with wsl -l ; eg: ubuntu config --default-user johndoe 

	_______:  PATH in distro:
	/etc/wls.conf : [interop] appendWindowsPath=true/false ##--: whether WSL will add Windows path elements to the $PATH environment variable in distro?

##________________________________________  ___________________________


#####  ==========  cmds usefulls:
	_______:  Lx-win-cmds
	- ! https://learn.microsoft.com/en-us/windows/wsl/setup/environment#basic-wsl-commands
	- ! running just Lx-std-cmds from a PS1-shell, eg   wsl uname -a ; wsl grep -i aaa *
	- ! mixing lx + win-cmds, eg: ipconfig.exe | wsl grep IPv4 | wsl cut -d: -f2  ##--see URl above !
##________________________________________  ___________________________



############################## 1trys-WLSs : #######################################################
#####  ==========  __CP_ /:240209 : OracleLinux_8_7 -WSL-dev1vdi :
    _______:  basics evv/profs/mount/vi....:
    sudo mkdir /etc/00orgs ; ##--put .... there!
    sudo cp /etc/bashrc /etc/bashrc--240211_1org  ;
    sudo vi /etc/bashrc ##--add:  export  q_Host1full=2401rh ; source   /c/Users/DKX8H1N/up1/.ev13/etc/profile.sh
    sudo vi /etc/wsl.conf  ##- /c mount-point,...:   [boot] systemd=true [automount] root=/ [network] generateResolvConf = false
    sudo cp /etc/*org*/  /etc/00orgs/ ;  sudo  vi /etc/00orgs/wsl.conf  ##-: "_______not_existing_1org_____"
    sudo mv /etc/resolv.conf  /etc/00orgs/resolv.conf_1org_generate
    sudo vi /etc/resolv.conf     ## nameserver 10.32.25.20 \n   nameserver 10.34.137.80
    sudo vi /etc/dnf/dnf.conf    ## proxy=http://...  ##-!!-did NOT work with https !! (certificate or so...!?!?); fine with http !
    PS1-Admin> wsl.exe --terminate  OracleLinux_8_7  ;
    - check NW:
    set proxys in evv-profiles /or in shell with setProxysOfc1  for apps, if wanted to go online ...! (wget)
    sudo dnf  list --updates ;
    wget https://www.google.com/ bzw. wget http://www.google.com/  ##--required each proxy-envvars for each-protocol (http/s) !
    sudo dnf  install tmux
    ---> OK! fine!

    _______:  wsl --install -d OracleLinux_8_7
    C:\Users\DKX8H1N\Downloads : wsl --install -d OracleLinux_8_7
    Installing: Oracle Linux 8.7
    Oracle Linux 8.7 has been installed.
    Launching Oracle Linux 8.7...
    ---
##________________________________________  ___________________________

#####  ==========  __CP_ /:240210 :  ubuntu WSL-dev1vdi:
	_______:  basics evv/profs/mount/vi....:
	sudo mkdir /etc/00orgs ;  chown -R u1:u1  /etc/00orgs ; ##--put .... there!
	sudo cp /etc/bash.bashrc  /etc/00orgs/ ;
	sudo vi /etc/bash.bashrc ##--add:  q_Host1full=2401ubt ; source   /c/Users/DKX8H1N/up1/.ev13/etc/profile.sh
	sudo vi /etc/wsl.conf  ##- /c mount-point,...:   [boot] systemd=true [automount] root=/ [network] generateResolvConf = false
	sudo cp /etc/*org*/  /etc/00orgs/ ;  sudo  vi /etc/00orgs/wsl.conf  ##-: "_______not_existing_1org_____"
	sudo mv /etc/resolv.conf  /etc/00orgs/resolv.conf_1org_generate
	sudo vi /etc/resolv.conf     ## nameserver 10.32.25.20 \n 	nameserver 10.34.137.80
	sudo vi /etc/apt/apt.conf.d/proxy.conf  ##--: Acquire::http::Proxy "http://...:8080"; Acquire::https::Proxy "http://...:8080";
	PS1-Admin> wsl.exe --terminate  ubuntu ;
	- check NW:
	set proxys in evv-profiles /or in shell with setProxysOfc1  for apps, if wanted to go online ...! (wget)
	sudo apt-get update
	wget https://www.google.com/ bzw. wget http://www.google.com/  ##--required each proxy-envvars for each-protocol (http/s) !
	sudo apt install w3m  links
	sudo apt-get  install tmux
	---> OK! fine!

	_______:  NWs ubuntu1 infs:
	see https://wiki-..../display/CS10202/VDI%3A+Windows+Subsystem+for+Linux+%28WSL%29+Installation
	sudo vi /etc/apt/apt.conf.d/proxy.conf  ##--: Acquire::http::Proxy "http://...:8080"; Acquire::https::Proxy "http://...:8080";
	sudo vi /etc/resolv.conf  ##-- nameserver 10.32.25.20 (wiki), nameserver 10.34.137.80 (1kk-dev1vdi--ping to win-DNS!)
	sudo vi /etc/wsl.conf     ##-- [network] generateResolvConf = false
	-
	apt works now, but still for apps/internet/browsers/links/w3m have to set proxy-envvars:  setProxysOfc1
	but not all apps use the envvars! e.g links must call with : links  -https-proxy ...:8080   https://www.google.com/
	but eg w3m takes the proxy-envvars BUT syntax must contain "https://..."
	the apt itselt requires the proxy settings in its  /etc/apt/apt.conf.d/proxy.conf  and not the envvars !! ...

	_______:  install :
	C:\Users\DKX8H1N\Downloads : wsl --install
	Wird installiert: Ubuntu
	Enter new UNIX username: u1
   u1@FSDDBSCV2207:~$
##________________________________________  ___________________________



############################## 1coll-WLXs : #######################################################

